@using Troonch.RetailSales.Product.Domain.DTOs.Requests;

@model ProductBrandRequestDTO;

<div>
    @using (Html.BeginForm("Create", "Brands", FormMethod.Post, new { @onsubmit = Model.Id == Guid.Empty ? $"submitBrandForm(event)" : $"submitBrandFormInUpdated(event)", @id = "brand-form", @class = "forms-sample row" }))
    { 
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.Id, new {@id="brand-id"})

        <div class="form-group col-12">
            @Html.LabelFor(m => m.Name, "Nome")
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "name", @placeholder = "name" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger mt-1 my-2 ms-1 d-block error-message", data_error = "name" })
        </div>

        <div class="form-group col-12">
            @Html.LabelFor(m => m.Description, "Descrizione")
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @id = "description" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger mt-1 my-2 ms-1 d-block error-message", data_error = "description" })
        </div>

        <div class="">
            <button type="button" class="btn btn-light w-100 mb-3" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-gradient-primary w-100">Submit</button>
        </div>
    }
</div>

