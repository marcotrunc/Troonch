@using Troonch.RetailSales.Product.Domain.DTOs.Responses;
@model ProductResponseDTO;

@*Header Page*@

<div class="page-header">
    <h3 class="page-title">@Model.ProductBrandName @Model.Name</h3>
</div>

<div class="row">
   @* Product Form Container*@
    <div class="col-md-8 grid-margin stretch-card">
        <div class="card">
            <div class="px-4 py-4">
                <h4 class="card-title float-start">Informazioni</h4>
            </div>
            <div class="card-body">
                <section id="product-form-container">
                </section>
            </div>
        </div>
    </div>

    @* Product Gallery Container*@
    <div class="col-md-4 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Galleria</h4>
                <section class="mb-4">
                    <div class="drop_box">
                        <header>
                        <h4>Aggiungi nuova immagine</h4>
                        </header>
                        <p>File supportati: JPG, JPEG, PNG</p>
                        <input type="file" hidden accept=".jpg,.jpeg,.png" id="fileID" style="display:none;">
                        <button class="btn btn-gradient-primary">Scegli File</button>
                    </div>
                </section>
                <section>
                    <div>
                        <img src="https://static.zara.net/assets/public/47a3/2399/f91d4984bcc9/566881ec3896/1689085196541/1689085196541.jpg?ts=1701856748172&w=551" width="100%" class="object-fit-contain rounded" alt="Img">
                    </div>
                </section>
            </div>
        </div>
    </div>

    @* Product Item Form Container*@
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body px-4 py-4">
                <h4 class="card-title">Variazioni</h4>
                <div class="d-flex justify-content-end align-items-center mb-2">
                    @* Add Buttons*@
                    <div id="add-variation-button-product">
                        <button type="button" class="btn btn-outline-primary btn-icon-text d-none d-md-block" onclick="showVariationModal('@Url.Action("GetProductItemsForm","Items",new { categoryId = Model.ProductCategoryId, productId = Model.Id,})')">
                            <i class="mdi mdi-plus-box btn-icon-prepend"></i> Aggiungi
                        </button>
                        <button type="button" class="btn btn-outline-primary btn-icon-text btn-sm d-md-none" onclick="showVariationModal('@Url.Action("GetProductItemsForm","Items",new { categoryId = Model.ProductCategoryId, productId = Model.Id,})')">
                            <i class="mdi mdi-plus-box"></i>
                        </button>
                    </div>

                    <div id="variation-products-buttons" class="d-none">
                        <button type="button" class="btn btn-outline-danger btn-icon-text d-none d-md-inline" onclick="deleteProductItem()">
                            <i class="mdi mdi-delete btn-icon-prepend"></i> Elimina
                        </button>
                        <button type="button" class="btn btn-outline-danger btn-icon-text btn-sm d-md-none" onclick="deleteProductItem()">
                            <i class="mdi mdi-delete"></i>
                        </button>

                        <button type="button" class="btn btn-outline-primary btn-icon-text d-none d-md-inline" onclick="showVariationModal('@Url.Action("GetProductItemsForm","Items",new { categoryId = Model.ProductCategoryId, productId = Model.Id,})')">
                            <i class="mdi mdi-pencil-box btn-icon-prepend"></i> Modifica
                        </button>
                        <button type="button" class="btn btn-outline-primary btn-icon-text btn-sm d-md-none" onclick="showVariationModal('@Url.Action("GetProductItemsForm","Items",new { categoryId = Model.ProductCategoryId, productId = Model.Id,})')">
                            <i class="mdi mdi-pencil-box"></i> 
                        </button>

                        <button type="button" class="btn btn-outline-info btn-icon-text d-none d-md-inline">
                            <i class="mdi mdi-printer btn-icon-prepend"></i> Stampa
                        </button>
                        <button type="button" class="btn btn-outline-info btn-icon-text btn-sm d-md-none">
                            <i class="mdi mdi-printer"></i> 
                        </button>
                    </div>
                </div>
                <section id="product-item-list-container">
                </section>
            </div>
        </div>
    </div>
</div>



<!-- Other Action Section -->
<div class="row">
    <section class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body px-4 py-4">
                <h4 class="card-title">Altre Azioni</h4>
                <div class="d-flex flex-column flex-md-row justify-content-md-around">
                    <button type="button" class="mb-2 btn btn-outline-danger btn-icon-text d-inline" onclick="showConfiramtionModal('Sei Sicuro di voler eliminare il prodotto?','Il prodotto verrà eliminato definitivamente',showAlert)">
                        <i class="mdi mdi-delete-forever btn-icon-prepend"></i> Elimina Prodotto
                    </button>
                    <button type="button" class="btn btn-outline-danger btn-icon-text d-inline" onclick="showConfiramtionModal('Sei Sicuro di voler eliminare il prodotto?','Il prodotto verrà eliminato definitivamente',showAlert)">
                        <i class="mdi mdi-delete-forever btn-icon-prepend"></i> Elimina Prodotto
                    </button>
                </div>
            </div>
        </div>
    </section>
</div>



<!-- Modal -->
<div class="modal fade" id="variation-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuova Variazione</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="variation-modal-body" class="modal-body">
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/product.js"></script>
    <script src="~/js/productItem.js"></script>
    <script>
        window.addEventListener('load', async (event) => {
            await renderHTML(`@Url.Action("GetProductForm","Products", new {@id= Model.Id})`, 'product-form-container');
            await renderHTML(`@Url.Action("Index","Items", new {@productId= Model.Id})`, 'product-item-list-container');
        }); 

        const showAlert = () =>{
            alert('Hello World');
        }

        const updateCategoriesOptionsByGender = (element, productGenderCategoriesLookup, categories) => {

            const genderDropdown = document.getElementById('gender');
            const categoryEmpty = document.getElementById('category-empty');
            let categoryDropdown = document.getElementById('category');

            const selectedGenderId = element.value;

            if (!selectedGenderId || selectedGenderId == "") {
                categoryEmpty.classList.remove('d-none')
                categoryDropdown.classList.add('d-none')
                return;
            }

            const cateogoriesByGenderId = productGenderCategoriesLookup.filter(item => item.ProductGenderId == selectedGenderId).map(item => item.ProductCategoryId);


            const categoriesFiltered = categories.filter(category => cateogoriesByGenderId.includes(category.Id));

            categoryDropdown.innerHTML = '';

            categoriesFiltered.forEach((category) => {
                var option = document.createElement('option');
                option.value = category.Id;
                option.text = category.Name;
                categoryDropdown.appendChild(option);
            });

            categoryEmpty.classList.add('d-none')
            categoryDropdown.classList.remove('d-none')
        }
    
        //Gallery Handler

        const dropArea = document.querySelector(".drop_box");
        const button = dropArea.querySelector("button");
        const input = dropArea.querySelector("input");
        
        button.onclick = () => {
            input.click();
        };

        input.addEventListener("change", async (e) => {
            debugger;

            if(e.target.files.length > 1){
                showNotification(true, "Puoi selezionare solo un file");
                return;
            }
            

            let file = e.target.files[0];
            if (!file) { 
                showNotification(true, "Seleziona un file valido")
                return;
            }
            
            let formData = new FormData();
            formData.append('file', file);

            try{
                const response = await fetch('@Url.Action("UploadImage","Products", new {userId = Model.Id})',{
                    method:'POST',
                    body: formData
                });

                if (!response.ok) {
                    return await handleRequestInError(response);
                }

                showNotification(false);


                setTimeout(() => {
                    window.location.reload();
                }, 1000);

            }
            catch(error){
                handleExceptionInFormWithRedirect(error);
            }
        });
    </script>
}
