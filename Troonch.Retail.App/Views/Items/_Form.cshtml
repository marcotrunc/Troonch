@using System.Globalization;
@using Troonch.RetailSales.Product.Domain.DTOs.Requests;

@model ProductItemRequestDTO;

<div class="card-body">
    @using (Html.BeginForm("Create", "ProductItems", FormMethod.Post, new { @onsubmit = "submitProductItemsForm(event)", @id = "product-item-form", @class = "forms-sample row" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ProductId, new {data_error="productid"})

        <div class="form-group col-md-6">
            @Html.LabelFor(m => m.ProductColorId, "Colore")
            @Html.DropDownListFor(m => m.ProductColorId, new SelectList(ViewBag.Colors,"Id","Name"), new {@class="col-md-6 form-control",  @id="color"} )
            @Html.ValidationMessageFor(m => m.ProductColorId,"", new { @class="text-danger mt-1 my-2 ms-1 d-block error-message", data_error="productcolorid"})
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(m => m.ProductSizeOptionId, "Taglia")
            @Html.DropDownListFor(m => m.ProductSizeOptionId, new SelectList(ViewBag.SizeOptions,"Id","Value"), new {@class="col-md-6 form-control",  @id="size"} )
            @Html.ValidationMessageFor(m => m.ProductSizeOptionId,"", new { @class="text-danger mt-1 my-2 ms-1 d-block error-message", data_error="productsizeoptionid"})
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(m => m.OriginalPrice, "Prezzo di Acquisto")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text bg-gradient-primary text-white">€</span>
                </div>
                @Html.TextBoxFor(m => m.OriginalPrice, new { @class="form-control", @id="original-price", @placeholder="0.00", type = "text", step = "0.01", min="0"})
            </div>
            @Html.ValidationMessageFor(m => m.OriginalPrice,"", new { @class="text-danger mt-1 my-2 ms-1 d-block error-message", data_error="originalprice"})
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(m => m.SalePrice, "Prezzo di Vendita")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text bg-gradient-primary text-white">€</span>
                </div>
                @Html.TextBoxFor(m => m.SalePrice, new { @class="form-control", @id="sale-price", @placeholder="0.00", type = "number", step = "0.01", min="0"})
            </div>
            @Html.ValidationMessageFor(m => m.SalePrice,"", new { @class="text-danger mt-1 my-2 ms-1 d-block error-message", data_error="saleprice"})
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(m => m.QuantityAvailable, "Quantità")
            @Html.TextBoxFor(m => m.QuantityAvailable, new { @class="form-control", @id="quantityAvailable", @placeholder="0", type = "number", step = "1", min="0"})
            @Html.ValidationMessageFor(m => m.QuantityAvailable,"", new { @class="text-danger mt-1 my-2 ms-1 d-block error-message", data_error="quantityavailable"})
        </div>

        <div class="form-group row justify-content-between align-items-center ">
            @Html.LabelFor(m => m.Barcode, "Barcode")
            <div class="col-8">
                @Html.TextBoxFor(m => m.Barcode, new { @class="form-control", @id="barcode", @placeholder="abc-123-asf", })
                @Html.ValidationMessageFor(m => m.Barcode,"", new { @class="text-danger mt-1 my-2 ms-1 d-block error-message", data_error="barcode"})
            </div>
            <div class="col-4">
                <button type="button" class="btn btn-info mb-2"  onclick="generateBarcode()">Genera Barcode</button>
            </div>
        </div>
        
        <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-light me-2" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-gradient-primary mr-2">Submit</button>
        </div>
    }


</div>
